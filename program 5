#include <stdio.h>
#include <stdlib.h>

struct Process {
  int pid;
  int burst_time;
  int waiting_time;
  int turn_around_time;
};
int compare(const void *a, const void *b) {
  struct Process *p1 = (struct Process *)a;
  struct Process *p2 = (struct Process *)b;
  return p1->burst_time - p2->burst_time;
}

int main() {
  int n;
  printf("Enter the number of processes: ");
  scanf("%d", &n);

  struct Process processes[n];

  for (int i = 0; i < n; i++) {
    processes[i].pid = i + 1;
    printf("Enter burst time for process %d: ", processes[i].pid);
    scanf("%d", &processes[i].burst_time);
  }

  qsort(processes, n, sizeof(struct Process), compare);

  processes[0].waiting_time = 0;
  processes[0].turn_around_time = processes[0].burst_time;

  for (int i = 1; i < n; i++) {
    processes[i].waiting_time = processes[i-1].waiting_time + processes[i-1].burst_time;
    processes[i].turn_around_time = processes[i].waiting_time + processes[i].burst_time;
  }

  printf("\nProcess\tBurst Time\tWaiting Time\tTurn-Around Time\n");
  for (int i = 0; i < n; i++) {
    printf("%d\t\t%d\t\t%d\t\t%d\n", processes[i].pid, processes[i].burst_time, processes[i].waiting_time, processes[i].turn_around_time);
  }

  return 0;
}
